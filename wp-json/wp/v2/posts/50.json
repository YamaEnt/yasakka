{"id":50,"date":"2017-10-04T14:25:48","date_gmt":"2017-10-04T14:25:48","guid":{"rendered":"http:\/\/kohette.com\/wpthemes\/narratium\/?p=50"},"modified":"2021-01-01T00:40:11","modified_gmt":"2021-01-01T00:40:11","slug":"black-box-software-could-be-the-future-of-cryptography","status":"publish","type":"post","link":"https:\/\/kohette.com\/wpthemes\/narratium\/black-box-software-could-be-the-future-of-cryptography\/","title":{"rendered":"&#8216;Black Box&#8217; Software Could Be the Future of Cryptography"},"content":{"rendered":"\n<p>Imagine trying to throw a dart at a bullseye that\u2019s 200 feet away with only your bare hands. Now, add a blindfold to the equation. Theoretically, it might be possible. But practically, it&#8217;s pretty much impossible\u2014about the same odds as trying to break a new form of software protection called indistinguishability obfuscation.<\/p>\n\n\n\n<p>Indistinguishability obfuscation\u2014similar in nature to a technology IBM has patented called homomorphic encryption\u2014is one of the possible futures of cryptography. The main idea behind it is relatively straightforward: through some arcane math, a team of six cryptography experts have figured out that it\u2019s possible to mask code, making it nearly impenetrable to hacks, while at the same time still being possible to run as useful software.<\/p>\n\n\n\n<p>\u201cTraditional encryption is about securing data,\u201d said Dr. Dan Boneh, an encryption expert at Stanford. \u201cObfuscation is about securing software\u2014a very different notion than encryption.\u201d<\/p>\n\n\n\n<p>The obfuscator works like this. A developer would code a piece of software, and then for added security, run it through a typical garbler, as most commercial software is these days. Following that, the developer would run the garbled software through the indistinguishability obfuscator\u2014think of it kind of like an encryption application.<\/p>\n\n\n\n<blockquote><h3>\u201cIt means that I will be able to give you the code, but you won\u2019t be able to learn how it\u2019s constructed, or about any thing I wish to keep a secret within it.&#8221;<\/h3><\/blockquote>\n\n\n\n<p>The obfuscator takes a part the garbled code and mixes random elements together in such a way that when the obfuscated program is run in its intended fashion, the randomness is negated, and the intended output is generated. If the program is told to do something other than what its designer intended, it won\u2019t work.<\/p>\n\n\n\n<p>\u201cIt means that I will be able to give you the code, but you won\u2019t be able to learn how it\u2019s constructed, or about any thing I wish to keep a secret within it,\u201d Boneh said.<\/p>\n\n\n\n<p>Today most closed source code is obfuscated to some degree\u2014not directly accessible to prying eyes. But, such code is nearly always hackable given enough resources, cryptography expert Dr. Zachary Peterson told me over the phone. And online, most code is openly embedded in web pages, and can be easily studied. That\u2019s why being able to use indistinguishability obfuscation to create \u201cblack box\u201d software is a breakthrough.<\/p>\n\n\n\n<p>Dr. Amit Sahai\u2014one of the researchers who made the breakthrough, and who has been working on the obfuscation for 17 years\u2014took pains to explain that despite catchy headlines, the claim obfuscation would make software \u201cunhackable\u201d isn\u2019t accurate. The reality is that it still would be possible to crack\u2014just that with current technology it would be damn hard.<\/p>\n\n\n\n<p>\u201cYou might get lucky and hit the dart board, it\u2019s just a hell of a lot harder,&#8221; he said. (The dart board thing was my metaphor, but Sahai said it was a good one so we sort of talked around it.)<\/p>\n\n\n\n<p>It\u2019s important to note that right now this new form of software obfuscation is completely impractical to use, Sahai said. It would take weeks, or months to receive a meaningful result from querying an obfuscated program. That\u2019s mostly because of computing power, and the incredibly complex calculations necessary to run obfuscated code.\u200b<\/p>\n\n\n\n<p>\u201cWe have the first mathematical approach,\u201d he said, \u201cThis isn\u2019t coming in the next couple of years to say the least.\u201d<\/p>\n\n\n\n<p><iframe loading=\"lazy\" src=\"\/\/www.youtube-nocookie.com\/embed\/UroIzjhTCEY?rel=0\" width=\"100%\" height=\"400\" frameborder=\"0\" allowfullscreen=\"allowfullscreen\" data-mce-fragment=\"1\"><\/iframe><\/p>\n\n\n\n<p>Still, having the ability to develop black box software would allow tight controls on what it\u2019s used for, and potentially could ensure a greater amount of privacy for people using cloud services such as Gmail. For example, if the email service\u2019s ad-serving software package were obfuscated, it would be impossible for either Google or third parties to do anything other than check email keywords and select which ads were served, Sahai explained.<\/p>\n\n\n\n<p>(Of course, for that particular example to succeed, Sahai said you\u2019d have to be willing to trust that Google programmed the black box to do what they claimed it did.)<\/p>\n\n\n\n<p>Indistinguishability obfuscation could be used to plant controls on digital and real-world surveillance technologies. For example, if you\u2019re worried that red light cameras can also double as license plate readers\u2014a controversial technology that the ACLU says may infringe on Americans\u2019 liberties\u2014obfuscated software scanning the images could ensure they would be used only for their apparent purpose\u2014doling out red light tickets.<\/p>\n\n\n\n<p>Another example of its use, also having to do with government accountability, is this: Were the NSA to build an obfuscated black box into a surveillance software packages such as XKeyscore, it could theoretically force agents to use XKeyscore for specific purposes\u2014whether that means preventing XKeyscore searches on American citizens, or whatever other predefined limitations deemed necessary.<\/p>\n\n\n\n<p>Also, inevitably, obfuscation would end up making into the future generations of malicious programs such as malware, remote access trojans, and other hacker tools. While it wouldn\u2019t make malware any tougher to capture, once a researcher does end up getting their hands on it, they will have a much harder time cracking the black box open, Sahai said, and therefore may make it harder to build defenses against.<\/p>\n\n\n\n<p>Those are only a few possibilities of the uses for obfuscation that I discussed with the security researchers I interviewed for this report. There are numerous others including email encryption (by handing over a black box to a friend that can decrypt messages), shorter and more efficient digital signatures\u2014used to sign software patches, for example, which sounds simple but is actually tough and important\u2014as well as solve dozens of what cryptographers call open problems.<\/p>\n\n\n\n<p>Despite the challenges ahead, Sahai pointed out that when RSA\u2019s first encryption schemes came out in the 1970s they were totally impractical as well. Today, they\u2019re seamlessly integrated into machines. Peterson said that while the concept still needs to be proven, the potential is intriguing.<\/p>\n\n\n\n<p>\u201cIt\u2019s worth approaching with a healthy sense of skepticism,\u201d Peterson said. \u201cBut as far as I can tell cryptographers are excited about its possibilities.\u201d<\/p>\n","protected":false},"excerpt":{"rendered":"<p>Imagine trying to throw a dart at a bullseye that\u2019s 200 feet away with only your bare hands. Now, add a blindfold to the equation. Theoretically, it might be possible. But practically, it&#8217;s pretty much impossible\u2014about the same odds as trying to break a new form of software protection called indistinguishability obfuscation. Indistinguishability obfuscation\u2014similar in [&hellip;]<\/p>\n","protected":false},"author":1,"featured_media":585,"comment_status":"open","ping_status":"open","sticky":false,"template":"","format":"standard","meta":[],"categories":[3,10,12],"tags":[20,28,29],"_links":{"self":[{"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/posts\/50"}],"collection":[{"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/posts"}],"about":[{"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/types\/post"}],"author":[{"embeddable":true,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/comments?post=50"}],"version-history":[{"count":2,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/posts\/50\/revisions"}],"predecessor-version":[{"id":678,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/posts\/50\/revisions\/678"}],"wp:featuredmedia":[{"embeddable":true,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/media\/585"}],"wp:attachment":[{"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/media?parent=50"}],"wp:term":[{"taxonomy":"category","embeddable":true,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/categories?post=50"},{"taxonomy":"post_tag","embeddable":true,"href":"https:\/\/kohette.com\/wpthemes\/narratium\/wp-json\/wp\/v2\/tags?post=50"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}